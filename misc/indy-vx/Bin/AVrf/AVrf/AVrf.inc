; o Application Verifier.
;
; Application verifier(AVrf*).
; Отладочный вывод: "AVRF: %s".
;
; [\Image File Execution Options\*.exe]
; "GlobalFlag" -> FLG_APPLICATION_VERIFIER(0x00000100)
;
; [\Image File Execution Options\*.exe]
; "VerifierDlls" - список провайдеров.
; "VerifierFlags" -> AVrfpVerifierFlags, RTL_VRF_FLG_*
; "VerifierDebug" -> AVrfpDebug
;
; InitRoutine() вызывается с причиной DLL_PROCESS_VERIFIER ранее чем DLL_PROCESS_ATTACH из 
; LdrpInitializeProcess() -> AVrfInitializeVerifier(). 3-й параметр InitRoutine() - ссылка 
; на переменную, в которую провайдер должен возвратить ссылку на структуру RTL_VERIFIER_PR
; OVIDER_DESCRIPTOR. Далее менеджер загрузит её в PROVIDER_ENTRY.ExportDlls.
; 
DLL_PROCESS_VERIFIER	equ 4

comment '
; Нотификаторы вызываются из LdrpWalkImportDescriptor().
;
; Нотификация загрузки модуля, вызывается из AVrfDllLoadNotification().
;
typedef VOID (NTAPI * RTL_VERIFIER_DLL_LOAD_CALLBACK) (
    PWSTR DllName,
    PVOID DllBase,
    SIZE_T DllSize,
    PVOID Reserved
    );

; Нотификация выгрузки модуля, вызывается из AVrfDllUnloadNotification().
;
typedef VOID (NTAPI * RTL_VERIFIER_DLL_UNLOAD_CALLBACK) (
    PWSTR DllName,
    PVOID DllBase,
    SIZE_T DllSize,
    PVOID Reserved
    );

typedef VOID (NTAPI * RTL_VERIFIER_NTDLLHEAPFREE_CALLBACK) (
    PVOID AllocationBase,
    SIZE_T AllocationSize
    );
    '

; * Ноль в конце списка.
;
RTL_VERIFIER_THUNK_DESCRIPTOR struct
ThunkName			PCHAR ?	; Имя экспорта.
ThunkOldAddress	PVOID ?
ThunkNewAddress	PVOID ?
RTL_VERIFIER_THUNK_DESCRIPTOR ends
PRTL_VERIFIER_THUNK_DESCRIPTOR typedef ptr RTL_VERIFIER_THUNK_DESCRIPTOR

; * Ноль в конце списка.
;
RTL_VERIFIER_DLL_DESCRIPTOR struct
DllName		PWCHAR ?
DllFlags		ULONG ?
DllAddress	PVOID ?
DllThunks		PRTL_VERIFIER_THUNK_DESCRIPTOR ?	; Указатель на массив описателей.
RTL_VERIFIER_DLL_DESCRIPTOR ends
PRTL_VERIFIER_DLL_DESCRIPTOR typedef ptr RTL_VERIFIER_DLL_DESCRIPTOR

; * InitRoutine() возвращает эту структуру.
;
RTL_VERIFIER_PROVIDER_DESCRIPTOR struct
; Заполняет провайдер.
_Length					ULONG ?	; sizeof(RTL_VERIFIER_PROVIDER_DESCRIPTOR) = 0x1C
ProviderDlls				PRTL_VERIFIER_DLL_DESCRIPTOR ?
ProviderDllLoadCallback		PVOID ?	; RTL_VERIFIER_DLL_LOAD_CALLBACK
ProviderDllUnloadCallback	PVOID ?	; RTL_VERIFIER_DLL_UNLOAD_CALLBACK
; Заполняет менеджер.
VerifierImage				PWSTR ?
VerifierFlags				ULONG ?	; <- AVrfpVerifierFlags
VerifierDebug				ULONG ?	; <- AVrfpDebug
;RtlpGetStackTraceAddress	PVOID ?
;RtlpDebugPageHeapCreate		PVOID ?
;RtlpDebugPageHeapDestroy	PVOID ?
;ProviderNtdllHeapFreeCallback	PVOID ?	; RTL_VERIFIER_NTDLLHEAPFREE_CALLBACK
RTL_VERIFIER_PROVIDER_DESCRIPTOR ends
PRTL_VERIFIER_PROVIDER_DESCRIPTOR typedef ptr RTL_VERIFIER_PROVIDER_DESCRIPTOR

; * Private, [AVrfpVerifierProvidersList].
;
PROVIDER_ENTRY struct
Link			LIST_ENTRY <>
DllName		UNICODE_STRING <>
DllBase		PVOID ?
EntryPoint	PVOID ?
ExportDlls	PRTL_VERIFIER_DLL_DESCRIPTOR ?
Undef1		DD ?
Undef2		DD ?
PROVIDER_ENTRY ends

; Application verifier standard flags

RTL_VRF_FLG_FULL_PAGE_HEAP                   equ 00000001H
RTL_VRF_FLG_RESERVED_DONOTUSE                equ 00000002H	; old RTL_VRF_FLG_LOCK_CHECKS
RTL_VRF_FLG_HANDLE_CHECKS                    equ 00000004H
RTL_VRF_FLG_STACK_CHECKS                     equ 00000008H
RTL_VRF_FLG_APPCOMPAT_CHECKS                 equ 00000010H
RTL_VRF_FLG_TLS_CHECKS                       equ 00000020H
RTL_VRF_FLG_DIRTY_STACKS                     equ 00000040H
RTL_VRF_FLG_RPC_CHECKS                       equ 00000080H
RTL_VRF_FLG_COM_CHECKS                       equ 00000100H
RTL_VRF_FLG_DANGEROUS_APIS                   equ 00000200H
RTL_VRF_FLG_RACE_CHECKS                      equ 00000400H
RTL_VRF_FLG_DEADLOCK_CHECKS                  equ 00000800H
RTL_VRF_FLG_FIRST_CHANCE_EXCEPTION_CHECKS    equ 00001000H
RTL_VRF_FLG_VIRTUAL_MEM_CHECKS               equ 00002000H
RTL_VRF_FLG_ENABLE_LOGGING                   equ 00004000H
RTL_VRF_FLG_FAST_FILL_HEAP                   equ 00008000H
RTL_VRF_FLG_VIRTUAL_SPACE_TRACKING           equ 00010000H
RTL_VRF_FLG_ENABLED_SYSTEM_WIDE              equ 00020000H
RTL_VRF_FLG_MISCELLANEOUS_CHECKS             equ 00020000H
RTL_VRF_FLG_LOCK_CHECKS                      equ 00040000H

; Application verifier standard stop codes

APPLICATION_VERIFIER_INTERNAL_ERROR               equ 80000000H
APPLICATION_VERIFIER_INTERNAL_WARNING             equ 40000000H
APPLICATION_VERIFIER_NO_BREAK                     equ 20000000H
APPLICATION_VERIFIER_CONTINUABLE_BREAK            equ 10000000H
APPLICATION_VERIFIER_UNKNOWN_ERROR                    equ 0001H
APPLICATION_VERIFIER_ACCESS_VIOLATION                 equ 0002H
APPLICATION_VERIFIER_UNSYNCHRONIZED_ACCESS            equ 0003H
APPLICATION_VERIFIER_EXTREME_SIZE_REQUEST             equ 0004H
APPLICATION_VERIFIER_BAD_HEAP_HANDLE                  equ 0005H
APPLICATION_VERIFIER_SWITCHED_HEAP_HANDLE             equ 0006H
APPLICATION_VERIFIER_DOUBLE_FREE                      equ 0007H
APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK             equ 0008H
APPLICATION_VERIFIER_DESTROY_PROCESS_HEAP             equ 0009H
APPLICATION_VERIFIER_UNEXPECTED_EXCEPTION             equ 000AH
APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_EXCEPTION_RAISED_FOR_HEADER equ 000BH
APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_EXCEPTION_RAISED_FOR_PROBING equ 000CH
APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_HEADER      equ 000DH
APPLICATION_VERIFIER_CORRUPTED_FREED_HEAP_BLOCK       equ 000EH
APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_SUFFIX      equ 000FH
APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_START_STAMP equ 0010H
APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_END_STAMP   equ 0011H
APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK_PREFIX      equ 0012H
APPLICATION_VERIFIER_FIRST_CHANCE_ACCESS_VIOLATION    equ 0013H
APPLICATION_VERIFIER_CORRUPTED_HEAP_LIST              equ 0014H

APPLICATION_VERIFIER_TERMINATE_THREAD_CALL        equ 0100H
APPLICATION_VERIFIER_STACK_OVERFLOW               equ 0101H
APPLICATION_VERIFIER_INVALID_EXIT_PROCESS_CALL    equ 0102H

APPLICATION_VERIFIER_EXIT_THREAD_OWNS_LOCK        equ 0200H
APPLICATION_VERIFIER_LOCK_IN_UNLOADED_DLL         equ 0201H
APPLICATION_VERIFIER_LOCK_IN_FREED_HEAP           equ 0202H
APPLICATION_VERIFIER_LOCK_DOUBLE_INITIALIZE       equ 0203H
APPLICATION_VERIFIER_LOCK_IN_FREED_MEMORY         equ 0204H
APPLICATION_VERIFIER_LOCK_CORRUPTED               equ 0205H
APPLICATION_VERIFIER_LOCK_INVALID_OWNER           equ 0206H
APPLICATION_VERIFIER_LOCK_INVALID_RECURSION_COUNT equ 0207H
APPLICATION_VERIFIER_LOCK_INVALID_LOCK_COUNT      equ 0208H
APPLICATION_VERIFIER_LOCK_OVER_RELEASED           equ 0209H
APPLICATION_VERIFIER_LOCK_NOT_INITIALIZED         equ 0210H
APPLICATION_VERIFIER_LOCK_ALREADY_INITIALIZED     equ 0211H
APPLICATION_VERIFIER_LOCK_IN_FREED_VMEM           equ 0212H
APPLICATION_VERIFIER_LOCK_IN_UNMAPPED_MEM         equ 0213H
APPLICATION_VERIFIER_THREAD_NOT_LOCK_OWNER        equ 0214H

APPLICATION_VERIFIER_INVALID_HANDLE               equ 0300H
APPLICATION_VERIFIER_INVALID_TLS_VALUE            equ 0301H
APPLICATION_VERIFIER_INCORRECT_WAIT_CALL          equ 0302H
APPLICATION_VERIFIER_NULL_HANDLE                  equ 0303H
APPLICATION_VERIFIER_WAIT_IN_DLLMAIN              equ 0304H

APPLICATION_VERIFIER_COM_ERROR                    equ 0400H
APPLICATION_VERIFIER_COM_API_IN_DLLMAIN           equ 0401H
APPLICATION_VERIFIER_COM_UNHANDLED_EXCEPTION      equ 0402H
APPLICATION_VERIFIER_COM_UNBALANCED_COINIT        equ 0403H
APPLICATION_VERIFIER_COM_UNBALANCED_OLEINIT       equ 0404H
APPLICATION_VERIFIER_COM_UNBALANCED_SWC           equ 0405H
APPLICATION_VERIFIER_COM_NULL_DACL                equ 0406H
APPLICATION_VERIFIER_COM_UNSAFE_IMPERSONATION     equ 0407H
APPLICATION_VERIFIER_COM_SMUGGLED_WRAPPER         equ 0408H
APPLICATION_VERIFIER_COM_SMUGGLED_PROXY           equ 0409H
APPLICATION_VERIFIER_COM_CF_SUCCESS_WITH_NULL     equ 040AH
APPLICATION_VERIFIER_COM_GCO_SUCCESS_WITH_NULL    equ 040BH
APPLICATION_VERIFIER_COM_OBJECT_IN_FREED_MEMORY   equ 040CH
APPLICATION_VERIFIER_COM_OBJECT_IN_UNLOADED_DLL   equ 040DH
APPLICATION_VERIFIER_COM_VTBL_IN_FREED_MEMORY     equ 040EH
APPLICATION_VERIFIER_COM_VTBL_IN_UNLOADED_DLL     equ 040FH
APPLICATION_VERIFIER_COM_HOLDING_LOCKS_ON_CALL    equ 0410H

APPLICATION_VERIFIER_RPC_ERROR                    equ 0500H

APPLICATION_VERIFIER_INVALID_FREEMEM              equ 0600H
APPLICATION_VERIFIER_INVALID_ALLOCMEM             equ 0601H
APPLICATION_VERIFIER_INVALID_MAPVIEW              equ 0602H
APPLICATION_VERIFIER_PROBE_INVALID_ADDRESS        equ 0603H
APPLICATION_VERIFIER_PROBE_FREE_MEM               equ 0604H
APPLICATION_VERIFIER_PROBE_GUARD_PAGE             equ 0605H
APPLICATION_VERIFIER_PROBE_NULL                   equ 0606H
APPLICATION_VERIFIER_PROBE_INVALID_START_OR_SIZE  equ 0607H
APPLICATION_VERIFIER_SIZE_HEAP_UNEXPECTED_EXCEPTION equ 0618H